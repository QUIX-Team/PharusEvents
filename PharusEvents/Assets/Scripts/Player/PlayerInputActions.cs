//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/Scripts/Player/PlayerInputActions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerInputActions : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerInputActions()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerInputActions"",
    ""maps"": [
        {
            ""name"": ""Player"",
            ""id"": ""f2f8fad3-4fdc-4211-88bb-16e5927164da"",
            ""actions"": [
                {
                    ""name"": ""Jumping"",
                    ""type"": ""Button"",
                    ""id"": ""de846b32-372d-434c-a1e7-cab3b0ec5ab1"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Movements"",
                    ""type"": ""Value"",
                    ""id"": ""c0684f2d-12f0-496b-8666-dd8d6d26f5f8"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Looking"",
                    ""type"": ""Value"",
                    ""id"": ""c817376d-4693-49fc-ab1e-336ec30ad4b4"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""e9e1d1cd-240a-4a6a-b5d5-f1ee367993c2"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jumping"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""f2cb3030-4a42-4faa-971a-33c597be94d4"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movements"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""5529e7a9-4c1d-4756-a9a1-d01b2d89caed"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movements"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""016043fc-f005-429b-8bbc-0fc3154784e3"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movements"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""eb9de999-0574-4c43-834c-04758560bf30"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movements"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""f2458e94-906f-4bb7-b0a5-50944344e777"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movements"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""44a0b98e-62e7-4fa2-a0b4-2e1036d7a1c1"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movements"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c430a177-81ab-40c5-b579-83ed1d9d2304"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Looking"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""14b7dfa7-0ab1-4b13-9604-90c1d012cab4"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Looking"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""13786aee-7420-43bc-9699-91fbfb9b3705"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Looking"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""24e768c5-e331-4c00-850f-42deb6716d17"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Looking"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""3bc29aee-0b52-4914-8589-33bfeb481201"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Looking"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""b79fc532-1a55-4faa-8005-f6b9269c3de5"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Looking"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        },
        {
            ""name"": ""UI"",
            ""id"": ""7a195296-908a-4811-9452-444a79de8a88"",
            ""actions"": [
                {
                    ""name"": ""ShowVideolink"",
                    ""type"": ""Button"",
                    ""id"": ""7950f08f-5b8b-469e-a814-67e750011d73"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""HideVideoLink"",
                    ""type"": ""Button"",
                    ""id"": ""6acf36c1-f5d0-4da1-8d54-b7ecc838b3f9"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""VideoPause"",
                    ""type"": ""Button"",
                    ""id"": ""7a30cd18-0e89-4d9f-a5ec-365476c0dc20"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""VideoPlay"",
                    ""type"": ""Button"",
                    ""id"": ""fcbaf59d-0b9f-4153-a437-e669dd2f7e1e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ToggleMute"",
                    ""type"": ""Button"",
                    ""id"": ""7f9541de-3113-4d9d-89c6-e500f2086b2a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ToggleMuteOthers"",
                    ""type"": ""Button"",
                    ""id"": ""a08219c2-a8e9-4808-8108-352ce6218950"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""92ec7c13-7dd8-4253-a83e-6dfb9b654b4a"",
                    ""path"": ""<Keyboard>/o"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ShowVideolink"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""80d77d50-75cd-4eef-8a1b-565274fde464"",
                    ""path"": ""<Keyboard>/h"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""HideVideoLink"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0a0dd5c5-0a70-42f1-8e31-2ee0cb637fe1"",
                    ""path"": ""<Keyboard>/u"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""VideoPause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""86003880-fd75-4e01-9906-5d83c6217968"",
                    ""path"": ""<Keyboard>/y"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""VideoPlay"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""87b301ee-f6ad-4008-b01e-0ecec411ab75"",
                    ""path"": ""<Touchscreen>/touch0/tap"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ToggleMute"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e2b093ea-6d02-41ca-836f-275317e2a573"",
                    ""path"": ""<Keyboard>/numpad1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ToggleMute"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fc540abb-0e17-444c-bfdb-3efc044751c1"",
                    ""path"": ""<Touchscreen>/touch1/tap"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ToggleMuteOthers"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5efc0141-e693-46c5-a536-c0b3dd1b44cb"",
                    ""path"": ""<Keyboard>/numpad1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ToggleMuteOthers"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Player
        m_Player = asset.FindActionMap("Player", throwIfNotFound: true);
        m_Player_Jumping = m_Player.FindAction("Jumping", throwIfNotFound: true);
        m_Player_Movements = m_Player.FindAction("Movements", throwIfNotFound: true);
        m_Player_Looking = m_Player.FindAction("Looking", throwIfNotFound: true);
        // UI
        m_UI = asset.FindActionMap("UI", throwIfNotFound: true);
        m_UI_ShowVideolink = m_UI.FindAction("ShowVideolink", throwIfNotFound: true);
        m_UI_HideVideoLink = m_UI.FindAction("HideVideoLink", throwIfNotFound: true);
        m_UI_VideoPause = m_UI.FindAction("VideoPause", throwIfNotFound: true);
        m_UI_VideoPlay = m_UI.FindAction("VideoPlay", throwIfNotFound: true);
        m_UI_ToggleMute = m_UI.FindAction("ToggleMute", throwIfNotFound: true);
        m_UI_ToggleMuteOthers = m_UI.FindAction("ToggleMuteOthers", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Player
    private readonly InputActionMap m_Player;
    private IPlayerActions m_PlayerActionsCallbackInterface;
    private readonly InputAction m_Player_Jumping;
    private readonly InputAction m_Player_Movements;
    private readonly InputAction m_Player_Looking;
    public struct PlayerActions
    {
        private @PlayerInputActions m_Wrapper;
        public PlayerActions(@PlayerInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Jumping => m_Wrapper.m_Player_Jumping;
        public InputAction @Movements => m_Wrapper.m_Player_Movements;
        public InputAction @Looking => m_Wrapper.m_Player_Looking;
        public InputActionMap Get() { return m_Wrapper.m_Player; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerActions set) { return set.Get(); }
        public void SetCallbacks(IPlayerActions instance)
        {
            if (m_Wrapper.m_PlayerActionsCallbackInterface != null)
            {
                @Jumping.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnJumping;
                @Jumping.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnJumping;
                @Jumping.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnJumping;
                @Movements.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMovements;
                @Movements.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMovements;
                @Movements.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMovements;
                @Looking.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnLooking;
                @Looking.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnLooking;
                @Looking.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnLooking;
            }
            m_Wrapper.m_PlayerActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Jumping.started += instance.OnJumping;
                @Jumping.performed += instance.OnJumping;
                @Jumping.canceled += instance.OnJumping;
                @Movements.started += instance.OnMovements;
                @Movements.performed += instance.OnMovements;
                @Movements.canceled += instance.OnMovements;
                @Looking.started += instance.OnLooking;
                @Looking.performed += instance.OnLooking;
                @Looking.canceled += instance.OnLooking;
            }
        }
    }
    public PlayerActions @Player => new PlayerActions(this);

    // UI
    private readonly InputActionMap m_UI;
    private IUIActions m_UIActionsCallbackInterface;
    private readonly InputAction m_UI_ShowVideolink;
    private readonly InputAction m_UI_HideVideoLink;
    private readonly InputAction m_UI_VideoPause;
    private readonly InputAction m_UI_VideoPlay;
    private readonly InputAction m_UI_ToggleMute;
    private readonly InputAction m_UI_ToggleMuteOthers;
    public struct UIActions
    {
        private @PlayerInputActions m_Wrapper;
        public UIActions(@PlayerInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @ShowVideolink => m_Wrapper.m_UI_ShowVideolink;
        public InputAction @HideVideoLink => m_Wrapper.m_UI_HideVideoLink;
        public InputAction @VideoPause => m_Wrapper.m_UI_VideoPause;
        public InputAction @VideoPlay => m_Wrapper.m_UI_VideoPlay;
        public InputAction @ToggleMute => m_Wrapper.m_UI_ToggleMute;
        public InputAction @ToggleMuteOthers => m_Wrapper.m_UI_ToggleMuteOthers;
        public InputActionMap Get() { return m_Wrapper.m_UI; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(UIActions set) { return set.Get(); }
        public void SetCallbacks(IUIActions instance)
        {
            if (m_Wrapper.m_UIActionsCallbackInterface != null)
            {
                @ShowVideolink.started -= m_Wrapper.m_UIActionsCallbackInterface.OnShowVideolink;
                @ShowVideolink.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnShowVideolink;
                @ShowVideolink.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnShowVideolink;
                @HideVideoLink.started -= m_Wrapper.m_UIActionsCallbackInterface.OnHideVideoLink;
                @HideVideoLink.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnHideVideoLink;
                @HideVideoLink.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnHideVideoLink;
                @VideoPause.started -= m_Wrapper.m_UIActionsCallbackInterface.OnVideoPause;
                @VideoPause.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnVideoPause;
                @VideoPause.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnVideoPause;
                @VideoPlay.started -= m_Wrapper.m_UIActionsCallbackInterface.OnVideoPlay;
                @VideoPlay.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnVideoPlay;
                @VideoPlay.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnVideoPlay;
                @ToggleMute.started -= m_Wrapper.m_UIActionsCallbackInterface.OnToggleMute;
                @ToggleMute.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnToggleMute;
                @ToggleMute.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnToggleMute;
                @ToggleMuteOthers.started -= m_Wrapper.m_UIActionsCallbackInterface.OnToggleMuteOthers;
                @ToggleMuteOthers.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnToggleMuteOthers;
                @ToggleMuteOthers.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnToggleMuteOthers;
            }
            m_Wrapper.m_UIActionsCallbackInterface = instance;
            if (instance != null)
            {
                @ShowVideolink.started += instance.OnShowVideolink;
                @ShowVideolink.performed += instance.OnShowVideolink;
                @ShowVideolink.canceled += instance.OnShowVideolink;
                @HideVideoLink.started += instance.OnHideVideoLink;
                @HideVideoLink.performed += instance.OnHideVideoLink;
                @HideVideoLink.canceled += instance.OnHideVideoLink;
                @VideoPause.started += instance.OnVideoPause;
                @VideoPause.performed += instance.OnVideoPause;
                @VideoPause.canceled += instance.OnVideoPause;
                @VideoPlay.started += instance.OnVideoPlay;
                @VideoPlay.performed += instance.OnVideoPlay;
                @VideoPlay.canceled += instance.OnVideoPlay;
                @ToggleMute.started += instance.OnToggleMute;
                @ToggleMute.performed += instance.OnToggleMute;
                @ToggleMute.canceled += instance.OnToggleMute;
                @ToggleMuteOthers.started += instance.OnToggleMuteOthers;
                @ToggleMuteOthers.performed += instance.OnToggleMuteOthers;
                @ToggleMuteOthers.canceled += instance.OnToggleMuteOthers;
            }
        }
    }
    public UIActions @UI => new UIActions(this);
    public interface IPlayerActions
    {
        void OnJumping(InputAction.CallbackContext context);
        void OnMovements(InputAction.CallbackContext context);
        void OnLooking(InputAction.CallbackContext context);
    }
    public interface IUIActions
    {
        void OnShowVideolink(InputAction.CallbackContext context);
        void OnHideVideoLink(InputAction.CallbackContext context);
        void OnVideoPause(InputAction.CallbackContext context);
        void OnVideoPlay(InputAction.CallbackContext context);
        void OnToggleMute(InputAction.CallbackContext context);
        void OnToggleMuteOthers(InputAction.CallbackContext context);
    }
}
